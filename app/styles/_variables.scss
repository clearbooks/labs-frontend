$stack: "Open Sans", Arial, sans-serif;
$stack-b: "Myriad Pro", "Open Sans", Arial, sans-serif;
$stack-c: "Open Sans Condensed", Arial, sans-serif;

$baseline:          24px;
$body:              18px;

$gutter:            3.65%;
$gutter-b:          $baseline;

$background:        #DDD;
$brand:             #2896E4;
$brand-light:       #BDEDFF;
$brand-lighter:     #F4FAFC;
$brand-dark:        #2470A6;
$brand-darker:      #1B5883;
$brand-darker-edge: #0E2E44;

$brand-c:           #cf0a2c;
$brand-c-light:     #f4183e;

$white:             #ffffff;
$black:             #000;
$black-body:        #555555;
$gray:              #eeeeee;
$gray-dark:         #888888;
$gray-base:         #cccccc;
$green-light:       #aad593;
$green-base:        #3fae29;
$cyan:              #00acd7;
$red:               #ff5859;
$red-light:         #ffdede;
$transparent:       transparent !default;
$cursor-disabled:   not-allowed !default;

$card-shadow:       $gray;


/// Computes a top-shadow for a card effect.
/// @param {Number} $depth - depth level
/// @return {List}
@function top-shadow($depth) {
  $primary-offset: nth(1.5 3 10 14 19, $depth) * 1px;
  $blur: nth(1.5 3 10 14 19, $depth) * 4px;
  $color: rgba($black-body, nth(.12 .16 .19 .25 1, $depth));

  @return 0 $primary-offset $blur $color;
}

/// Computes a bottom-shadow for a card effect.
/// @param {Number} $depth - depth level
/// @return {List}
@function bottom-shadow($depth) {
  $primary-offset: nth(1.5 3 6 10 15, $depth) * 1px;
  $blur: nth(1 3 3 5 6, $depth) * 4px;
  $color: rgba($black-body, nth(.24 .23 .23 .22 1, $depth));

  @return 0 $primary-offset $blur $color;
}

/// Gives a card depth effect.
/// @param {Number} $depth - depth level (between 1 and 5)
/// @link http://www.google.com/design/spec/layout/layout-principles.html#layout-principles-dimensionality Google Design
/// @requires {function} top-shadow
/// @requires {function} bottom-shadow
@mixin card($depth) {
  @if $depth < 1 {
    box-shadow: none;
  } @else if $depth > 5 {
    @warn "Invalid $depth `#{$depth}` for mixin `card`.";
  } @else {
    box-shadow: bottom-shadow($depth), top-shadow($depth);
  }
}

/* includes */
@mixin box-model {
  -webkit-box-sizing: border-box; /* Safari/Chrome, other WebKit */
  -moz-box-sizing: border-box;    /* Firefox, other Gecko */
  box-sizing: border-box;         /* Opera/IE 8+ */
}

@mixin fade {
  transition: background-color 0.2s;
  -webkit-transition: background-color 0.2s;
  -moz-transistion: background-color 0.2s;
  transition: color 0.2s;
  -webkit-transition: color 0.2s;
  -moz-transistion: color 0.2s;
  transition: opacity 0.2s;
  -webkit-transition: opacity 0.2s;
  -moz-transistion: opacity 0.2s;
}

@mixin rounded {
  -webkit-border-radius: 4px;
  -moz-border-radius: 4px;
  -ms-border-radius: 4px;
  -o-border-radius: 4px;
  border-radius: 4px;
}

@mixin remove-outline {
  outline: none;
  -webkit-box-shadow: none;
  -moz-box-shadow: none;
  box-shadow: none;
}

@mixin mui-node-inserted() {
  animation-duration: 0.0001s;
  animation-name: mui-node-inserted;
}

@keyframes mui-node-inserted {
  from {opacity: 0.99;}
  to {opacity: 1;}
}


